/**
* @fileoverview This file is generated by the Angular template compiler.
* Do not edit.
* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
* tslint:disable
*/ 
import * as i0 from "@angular/core";
import * as i1 from "./splitGutter.directive";
import * as i2 from "@angular/common";
import * as i3 from "./split.component";
var styles_SplitComponent = ["[_nghost-%COMP%] {\n            display: flex;\n            flex-wrap: nowrap;\n            justify-content: flex-start;\n            align-items: stretch;\n            flex-direction: row;\n        }\n\n        .vertical[_nghost-%COMP%] {\n            flex-direction: column;\n        }\n\n        split-gutter[_ngcontent-%COMP%] {\n            flex-grow: 0;\n            flex-shrink: 0;\n            background-color: #eeeeee;\n            background-position: center center;\n            background-repeat: no-repeat;\n        }\n\n        .vertical[_nghost-%COMP%]   split-gutter[_ngcontent-%COMP%] {\n            width: 100%;\n        }\n\n        [_nghost-%COMP%]     split-area {\n            transition: flex-basis 0.3s;\n        }  \n\n        .notransition[_nghost-%COMP%]     split-area {\n            transition: none !important;\n        }      \n\n        [_nghost-%COMP%]     split-area.hided {\n            flex-basis: 0 !important;\n            overflow: hidden !important;\n        }      \n\n        .vertical[_nghost-%COMP%]     split-area.hided {\n            max-width: 0;\n        }"];
var RenderType_SplitComponent = i0.ɵcrt({ encapsulation: 0, styles: styles_SplitComponent, data: {} });
export { RenderType_SplitComponent as RenderType_SplitComponent };
function View_SplitComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "split-gutter", [], null, [[null, "mousedown"], [null, "touchstart"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("mousedown" === en)) {
        var pd_0 = (_co.startDragging($event, ((_v.parent.context.index * 2) + 1)) !== false);
        ad = (pd_0 && ad);
    } if (("touchstart" === en)) {
        var pd_1 = (_co.startDragging($event, ((_v.parent.context.index * 2) + 1)) !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), i0.ɵdid(1, 16384, null, 0, i1.SplitGutterDirective, [i0.ElementRef, i0.Renderer], { order: [0, "order"], direction: [1, "direction"], size: [2, "size"], disabled: [3, "disabled"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = ((_v.parent.context.index * 2) + 1); var currVal_1 = _co.direction; var currVal_2 = _co.gutterSize; var currVal_3 = _co.disabled; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3); }, null); }
function View_SplitComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, ["\n            "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_SplitComponent_2)), i0.ɵdid(2, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵted(-1, null, ["\n        "]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (((_v.context.last === false) && (_v.context.$implicit.component.visible === true)) && !_co.isLastVisibleArea(_v.context.$implicit)); _ck(_v, 2, 0, currVal_0); }, null); }
export function View_SplitComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵted(-1, null, ["\n        "])), i0.ɵncd(null, 0), (_l()(), i0.ɵted(-1, null, ["\n        "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_SplitComponent_1)), i0.ɵdid(4, 802816, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.areas; _ck(_v, 4, 0, currVal_0); }, null); }
export function View_SplitComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "split", [], [[2, "vertical", null], [4, "flex-direction", null], [2, "notransition", null], [4, "width", null], [4, "height", null]], null, null, View_SplitComponent_0, RenderType_SplitComponent)), i0.ɵdid(1, 704512, null, 0, i3.SplitComponent, [i0.ChangeDetectorRef, i0.ElementRef, i0.Renderer], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).styleFlexDirection; var currVal_1 = i0.ɵnov(_v, 1).styleFlexDirectionStyle; var currVal_2 = i0.ɵnov(_v, 1).dragging; var currVal_3 = i0.ɵnov(_v, 1).styleWidth; var currVal_4 = i0.ɵnov(_v, 1).styleHeight; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }
var SplitComponentNgFactory = i0.ɵccf("split", i3.SplitComponent, View_SplitComponent_Host_0, { direction: "direction", width: "width", height: "height", gutterSize: "gutterSize", disabled: "disabled", visibleTransition: "visibleTransition" }, { dragStart: "dragStart", dragProgress: "dragProgress", dragEnd: "dragEnd", visibleTransitionEnd: "visibleTransitionEnd" }, ["*"]);
export { SplitComponentNgFactory as SplitComponentNgFactory };
//# sourceMappingURL=split.component.ngfactory.js.map